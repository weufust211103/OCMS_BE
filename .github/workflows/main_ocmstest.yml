# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - ocmstest

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ./OCMS_WebAPI_Solution/OCMS_WebAPI_Solution.sln

      - name: Run tests
        run: dotnet test ./OCMS_WebAPI_Solution/OCMS_WebAPI_Solution.sln --no-restore --verbosity normal

      - name: Security scan with CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp

      - name: Build with dotnet
        run: dotnet build ./OCMS_WebAPI_Solution/OCMS_WebAPI_Solution.sln --configuration Release --no-restore

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: dotnet publish
        run: dotnet publish ./OCMS_WebAPI_Solution/OCMS_WebAPI_Solution.sln -c Release -o "${{env.DOTNET_ROOT}}/myapp" --self-contained --runtime win-x86 /p:DebugSymbols=false /p:DebugType=None

      - name: Debug artifact contents before removal
        run: ls -R "${{env.DOTNET_ROOT}}/myapp"

      - name: Remove unnecessary files
        run: |
          rm -f "${{env.DOTNET_ROOT}}/myapp/*.pdb"
          rm -rf "${{env.DOTNET_ROOT}}/myapp/ref"
          rm -rf "${{env.DOTNET_ROOT}}/myapp/runtimes/*/{osx,linux,win-x64}*"

      - name: Debug artifact contents after removal
        run: ls -R "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          retention-days: 5

  deploy:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: .net-app

      - name: Debug deployed files
        run: ls -R .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_93B5BF5DAB03467688690D3ACCEDBE88 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_59616B93C7B54D13B71E415AA2C56A3B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8472ACCCD6474EF6A2E515EA73A76B05 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ocmstest'
          slot-name: 'Production'
          package: .net-app
          app-settings-json: |
            [
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "Production",
                "slotSetting": false
              },
              {
                "name": "ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS",
                "value": "true",
                "slotSetting": false
              },
              {
                "name": "WEBSITE_32BIT_ENABLED",
                "value": "true",
                "slotSetting": false
              }
            ]

      - name: Log deployment status
        if: always()
        run: |
          echo "============== DEPLOYMENT STATUS SUMMARY =============="
          echo "Status: ${{ job.status }}"
          echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S')"
          echo "Environment: Production"
          echo "Application: ocmstest"
          echo "Deployed URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"
